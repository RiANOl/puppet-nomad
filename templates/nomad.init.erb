#!/bin/bash
#
#       /etc/rc.d/init.d/nomad
#
#       Daemonize the nomad agent.
#
# chkconfig:   2345 95 20
# description: Service discovery and configuration made easy. \
#  Distributed, highly available, and datacenter-aware.
# processname: nomad
# pidfile: /var/run/nomad/pidfile

# Source function library.
. /etc/init.d/functions

NOMAD=<%= scope.lookupvar('nomad::bin_dir') %>/nomad
CONFIG=<%= scope.lookupvar('nomad::config_dir') %>
PID_FILE=/var/run/nomad/nomad.pid
LOG_FILE=<%= scope.lookupvar('nomad::log_file') %>

[ -e /etc/sysconfig/nomad ] && . /etc/sysconfig/nomad

export GOMAXPROCS=${GOMAXPROCS:-2}

#
# Create the /var/run/nomad directory, which can live on a tmpfs
# filesystem and be destroyed between reboots.
#
mkrundir() {
        [ ! -d /var/run/nomad ] && mkdir -p /var/run/nomad
        chown <%= scope.lookupvar('nomad::user') %> /var/run/nomad
}

#
# Create a PID file if it doesn't already exist, for clean upgrades
# from previous init-script controlled daemons.
#
KILLPROC_OPT="-p ${PID_FILE}"
mkpidfile() {
        # Create PID file if it didn't exist
        mkrundir
        [ ! -f $PID_FILE ] && pidofproc $NOMAD > $PID_FILE
        chown <%= scope.lookupvar('nomad::user') %> /var/run/nomad
        if [ $? -ne 0 ] ; then
            rm $PID_FILE
            KILLPROC_OPT=""
        fi
}

start() {
        echo -n "Starting nomad: "
        mkrundir
        [ -f $PID_FILE ] && rm $PID_FILE
        daemon --user=<%= scope.lookupvar('nomad::user') %> \
            --pidfile="$PID_FILE" \
            "$NOMAD" agent -pid-file "${PID_FILE}" -config "$CONFIG" <%= scope.lookupvar('nomad::extra_options') %> >> "$LOG_FILE" &
        retcode=$?
        touch /var/lock/subsys/nomad
        return $retcode
}

stop() {
        DELAY=5 # seconds maximum to wait for a leave

        echo -n "Shutting down nomad: "
        mkpidfile

        killproc $KILLPROC_OPT $NOMAD
        retcode=$?

        rm -f /var/lock/subsys/nomad $PID_FILE
        return $retcode
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $PID_FILE
        ;;
    restart)
        stop
        start
        ;;
    reload)
        mkpidfile
        killproc $KILLPROC_OPT $NOMAD -HUP
        ;;
    condrestart)
        [ -f /var/lock/subsys/nomad ] && restart || :
        ;;
    *)
        echo "Usage: nomad {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
retcode=$?
# Don't let the [OK] get stomped on.
echo
exit $retcode
